#
# This is the top makefile located in the root directory of a project.
#

####################### Top-makefile begin #######################

USER_PROGRAM_ROOT = $(shell pwd)

# CPP_ASSISTANT_ROOT is recommended to set as an environment variable,
# or you can specify it manually(using absolute path).
CPP_ASSISTANT_ROOT = $(shell echo $$CPP_ASSISTANT_ROOT)
ifneq ($(CPP_ASSISTANT_ROOT)/makefiles, $(wildcard $(CPP_ASSISTANT_ROOT)/makefiles))

    $(warning CPP_ASSISTANT_ROOT environment variable not found, keep searching in $(HOME)/src directory ...)

    CPP_ASSISTANT_ROOT=$(HOME)/src/cpp_assistant

    ifneq ($(HOME)/src/cpp_assistant/makefiles, $(wildcard $(HOME)/src/cpp_assistant/makefiles))
        $(error Directory $(HOME)/src/cpp_assistant not found, no idea where the cpp_assistant is ...)
    else
        $(info Found: $(HOME)/src/cpp_assistant)
    endif

endif

# USE_PURE_FILE_NAME controls whether __FILE__ contains directory prefix or not.
# 0: has prefix; 1: no prefix
USE_PURE_FILE_NAME = 0

# For main.mk/module_compilation_manager.mk
SUBDIRS = [Directories of sub-modules in your project. Use relative paths!]

# For main.mk/prerequisites.mk
CONFIG_DIRS = [Your value(s). Use relative paths!]
SRC_CODE_DIRS = [Your value(s). Use relative paths!]
PROTO_DIRS = [Your value(s). Use relative paths!]
FRAMEWORK = [Pick one of the frameworks of CASDK. Just a directory name, not a full path!]

include $(CPP_ASSISTANT_ROOT)/makefiles/main.mk

####################### Top-makefile end #######################



#
# This is the makefile located in each sub-directory of a project.
#

####################### Sub-makefile begin #######################

MAKEFILE_DIR = $(CPP_ASSISTANT_ROOT)/makefiles
DEFINES += $(MODULE_DEFINES) $(REQUIRED_DEFINES) [Your macros, or none]
INCLUDES += $(REQUIRED_INCLUDES) $(addprefix -I$(USER_PROGRAM_ROOT)/, $(addsuffix /framework_core, $(SRC_CODE_DIRS))) \
	-I[Path to your mutable_customization.h] -I[Your other private directories to be included, or none]
CFLAGS += [Your flags, or none] $(DEFINES) $(INCLUDES)
CXXFLAGS += [Your flags, or none] $(DEFINES) $(INCLUDES)
LDFLAGS += [Your flags, or none] $(REQUIRED_LDFLAGS)
SRCS_PUBLIC = $(shell find $(CPP_ASSISTANT_ROOT)/code/frameworks/framework_public/ -iname "*.c*" | grep -v "\.svn\|public_protocols")
SRCS_CORE = $(shell find $(CPP_ASSISTANT_ROOT)/code/frameworks/framework_templates/$(FRAMEWORK)/ -iname "*.c*" | grep -v "\.svn\|public_protocols")
SRCS += $(subst $(CPP_ASSISTANT_ROOT)/code/frameworks/framework_public,./framework_public,$(SRCS_PUBLIC))
SRCS += $(subst $(CPP_ASSISTANT_ROOT)/code/frameworks/framework_templates/$(FRAMEWORK),./framework_core,$(SRCS_CORE))
SRCS += [Your own source files(see the example below for reference), or none]
#SRCS += $(shell find ./business/ -iname "*.c*" | grep -v "\.svn")
TARGET := [Your value]

include $(MAKEFILE_DIR)/basic_rules.mk
include $(MAKEFILE_DIR)/single_executive_template.mk

####################### Sub-makefile end #######################
