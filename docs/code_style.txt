/*****************************************************************************
 **** 缩略词说明
 *****************************************************************************/

全大/小写：单词全部大/小写，单词间以下划线分隔。

大小写：单词首字母大小，余下部分小写（针对普通单词）或大写（适用于HTTP之类的缩略词，但不强制），单词间不用下划线分隔。




/*****************************************************************************
 **** 概要
 *****************************************************************************/

兼容C的部分一般用全小写形式，纯CPP部分根据情况使用全小写或大小写形式，宏和常量一般用全大写形式，以下划线开头的变量和函数
仅供模块内部使用，不作为公开接口，其余规则见具体条款，但所有规则均要保证够好的可读性（包括代码含义易于理解、排版便于阅读等）。




/*****************************************************************************
 **** 具体条款
 *****************************************************************************/

类名：大小写。

结构体和联合体（或共同体，即union）：全小写。若是类中的嵌套结构体或联合体，或者在结构体内加入成员函数当成类来使用，
	可考虑使用大小写。

命名空间（namespace）：全小写。

变量：全小写，若是类私有成员变量还要加上“m_”前缀，全局变量则加“g_”前缀，静态变量则加“s_”前缀。

常量：类外常量和类内静态常量用全大写，类内非静态常量用加上k前缀的大小写形式。

宏：一般为全大写，但对于要（语意上）伪装成函数的宏，则拼写规则跟随该函数的拼写规则。反过来，对于要伪装成宏的函数，
	则应该用全大写。

枚举：枚举名用带enum_前缀的全小写形式，枚举成员值则用全大写（没有enum_前缀）。

typedef类型：一般在类外定义（除了定义一个类的别名）可用小写，在类内定义可用大小写。

函数：自由函数及类的属性函数和状态函数全小写，其余的类成员函数用大小写。

缩进：4个空格，或者1个tab且将编辑器的tab宽度设为4个空格。其余情况视具体排版而定。

换行：大括号建议单独一行。其余情况视排版而定。

列数：推荐为120列以内，列宽度为半角输入法状态下一个英文字母的宽度。

注释：
	（1）多行注释一般针对代码块，在代码块前面；单行注释一般针对单行代码，在行的上方或行尾。
		注意注释和代码之间的空隙以增强可读性。
	（2）针对类或函数的功能说明注释，一般只在头文件列出，源文件不再重复。因为重复的注释会使维护的工作量加倍，
		而且对于使用者来说，只能看到头文件，对开发者来说，可同时看到头文件注释和源文件的代码，开发者只需确保
		代码可读性较好以及头文件注释准确，即可让自己和使用者都受益。
		对于虚函数的注释，除非子类的虚函数有特殊行为需要附加说明，否则一般没有注释，而在其基类对应的虚函数。

例外：对于伪装类（例如出于移植方便的需要，设置若干个伪装STL容器的类，如string、vector等）或伪装函数的命名，
	可遵循被伪装对象的规则。

