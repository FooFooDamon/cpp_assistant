#
# This file was generated by $CPP_ASSISTANT_ROOT/scripts/generate_makefile_from_cpp_assistant.sh on 2016/12/28.
# Edit the customized parts before it can be used.
# For more help, see documents in directory $CPP_ASSISTANT_ROOT/docs.
#
#
# This should be the ONE AND ONLY ONE makefile located in the root directory
# of a single-target project.
#

USER_PROGRAM_ROOT = $(shell pwd)

# CPP_ASSISTANT_ROOT is recommended to set as an environment variable,
# or you can specify it manually(using absolute path).
CPP_ASSISTANT_ROOT = $(shell echo $$CPP_ASSISTANT_ROOT)
ifneq ($(CPP_ASSISTANT_ROOT)/makefiles, $(wildcard $(CPP_ASSISTANT_ROOT)/makefiles))

    $(warning CPP_ASSISTANT_ROOT environment variable not found, keep searching in $(HOME)/src directory ...)

    CPP_ASSISTANT_ROOT=$(HOME)/src/cpp_assistant

    ifneq ($(HOME)/src/cpp_assistant/makefiles, $(wildcard $(HOME)/src/cpp_assistant/makefiles))
        $(error Directory $(HOME)/src/cpp_assistant not found, no idea where the cpp_assistant is ...)
    else
        $(info Found: $(HOME)/src/cpp_assistant)
    endif

endif

# USE_PURE_FILE_NAME controls whether __FILE__ contains directory prefix or not.
# 0: has prefix; 1: no prefix
USE_PURE_FILE_NAME = 0

# For main.mk/prerequisites.mk
CONFIG_DIRS = unused_stuff
SRC_CODE_DIRS = .
PROTO_DIRS = unused_stuff
FRAMEWORK = simple_app

# For main.mk/single_executive_template.mk
IS_SINGLE_TARGET = 1
MAKEFILE_DIR = $(CPP_ASSISTANT_ROOT)/makefiles
DEFINES += $(MODULE_DEFINES) $(REQUIRED_DEFINES) -DHAS_PROTOBUF -DENABLES_CHINESE
DEFINES += -DUSE_JSON_MSG # Comment it if you use protobuf format messages, or uncomment it if you use json format messages.
INCLUDES += $(REQUIRED_INCLUDES) $(addprefix -I$(USER_PROGRAM_ROOT)/, $(addsuffix /framework_core, $(SRC_CODE_DIRS))) -I/usr/include/jsoncpp
CFLAGS += -O2 $(DEFINES) $(INCLUDES)
CXXFLAGS += -O2 $(DEFINES) $(INCLUDES)
LDFLAGS += $(REQUIRED_LDFLAGS)
SRCS_PUBLIC = $(shell find $(CPP_ASSISTANT_ROOT)/code/frameworks/framework_public/ -iname "*.c*" | grep -v "\.svn\|public_protocols")
SRCS_CORE = $(shell find $(CPP_ASSISTANT_ROOT)/code/frameworks/framework_templates/$(FRAMEWORK)/ -iname "*.c*" | grep -v "\.svn\|public_protocols")
SRCS += $(subst $(CPP_ASSISTANT_ROOT)/code/frameworks/framework_public,./framework_public,$(SRCS_PUBLIC))
#SRCS += ./framework_public/public_protocols.pb.cc
SRCS += $(subst $(CPP_ASSISTANT_ROOT)/code/frameworks/framework_templates/$(FRAMEWORK),./framework_core,$(SRCS_CORE))
SRCS += $(shell find . -iname "*.cpp" | grep -v "\.svn\|framework_")
TARGET := simple_app

include $(MAKEFILE_DIR)/basic_rules.mk
include $(MAKEFILE_DIR)/main.mk
